{"mappings":"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","sources":["src/catalog.js","src/js/elementCard.js","src/js/catalogFilter.js"],"sourcesContent":["import './js/modal';\nimport './js/toggel';\nimport './js/elementCard';\nimport './js/hero';\n\n\n\nimport './js/localModalJs';\n\nimport './js/catalogFilter';\n\n\n","import { RequestServer } from \"./requestServer\";\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres'\n\nconst refs = {\n    cardContainer: document.querySelector('.card')\n}\nconst requestServer = new RequestServer();\n\nasync function ontrendingWeek() {\n  \n    try {\n        const genres = await requestGenre();\n        const responseWeek = await requestServer.trendingWeek();\n        const { results } = responseWeek.data;\n        // console.log(results);\n        // const test = results.slice(0, 3);\n        const markupCard = markup(results);\n\n        refs.cardContainer.innerHTML =  markupCard;\n    } catch(error) {\n    console.log(error);\n  };\n}\nontrendingWeek();\n\n","import { markup } from './markup';\nimport { RequestServer } from './requestServer';\n\nconst requestServer = new RequestServer();\nconst form = document.querySelector('#catalog-search-form');\nconst searchInput = document.querySelector('#catalog-search-input');\nconst yearSelect = document.querySelector('#catalog-year-select');\nconst genreSelect = document.querySelector('#catalog-genre-select');\nconst countrySelect = document.querySelector('#catalog-country-select');\nconst list = document.querySelector('#catalog-list');\nconst notFoundMessage = document.querySelector('#catalog-not-found-message');\nconst errorMessage = document.querySelector('#catalog-error-message');\n\nlet currentPage = 1;\n\nlet searchParams = {\n  searchQuery: undefined,\n  year: undefined,\n  genre: undefined,\n  country: undefined,\n};\n\nconst listDisplay = {\n  hideClassName: 'catalog__list--hidden',\n  show() {\n    list.classList.remove(this.hideClassName);\n  },\n  hide() {\n    list.classList.add(this.hideClassName);\n  },\n};\n\nconst notFoundMessageDisplay = {\n  hideClassName: 'catalog__message--hidden',\n  show() {\n    notFoundMessage.classList.remove(this.hideClassName);\n  },\n  hide() {\n    notFoundMessage.classList.add(this.hideClassName);\n  },\n};\n\nconst errorMessageDisplay = {\n  hideClassName: 'catalog__message--hidden',\n  show() {\n    errorMessage.classList.remove(this.hideClassName);\n  },\n  hide() {\n    errorMessage.classList.add(this.hideClassName);\n  },\n};\n\nconst displaySelects = () => {\n  const classNameToRemove = 'catalog__search-form-input--hidden';\n\n  yearSelect.classList.remove(classNameToRemove);\n  genreSelect.classList.remove(classNameToRemove);\n  countrySelect.classList.remove(classNameToRemove);\n};\n\nconst addSelectOption = (selectEl, optionValue, optionLabel) => {\n  const option = document.createElement('option');\n\n  option.value = optionValue;\n  option.innerHTML = optionLabel ?? optionValue;\n\n  selectEl.append(option);\n};\n\nconst configureYearSelect = () => {\n  const startFromYear = 2000;\n\n  for (let year = new Date().getFullYear(); year >= startFromYear; year--) {\n    addSelectOption(yearSelect, year);\n  }\n};\n\nconst configureGenreSelect = async () => {\n  const genres = (await requestServer.movieGenre()).data.genres;\n\n  genres.forEach(genre => addSelectOption(genreSelect, genre.id, genre.name));\n};\n\nconst configureSelects = () => {\n  configureYearSelect();\n  configureGenreSelect();\n};\n\nconst searchParamsToQuery = params => {\n  const searchQuery = params.searchQuery;\n  const year = params.year;\n  const genre = params.genre;\n  const country = params.country;\n\n  let query = '';\n\n  if (searchQuery) {\n    query += searchQuery;\n  }\n\n  if (year) {\n    query += `&year=${year}`;\n  }\n\n  if (genre) {\n    query += `&genre=${genre}`;\n  }\n\n  if (country) {\n    query += `&country=${country}`;\n  }\n\n  return query;\n};\n\nconst fetchMovies = async params => {\n  try {\n    const query = searchParamsToQuery(params);\n    const response = await requestServer.searchMovies(query);\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n\n    listDisplay.hide();\n    errorMessageDisplay.show();\n  }\n};\n\nconst renderMovies = async movies => {\n  if (movies.length) {\n    const moviesMarkup = markup(movies);\n\n    errorMessageDisplay.hide();\n    notFoundMessageDisplay.hide();\n\n    list.innerHTML = moviesMarkup;\n    listDisplay.show();\n  } else {\n    listDisplay.hide();\n    notFoundMessageDisplay.show();\n  }\n};\n\nconst handlePageChange = async event => {\n  currentPage = event.target.dataset.page;\n\n  const movies = await fetchMovies();\n\n  await renderMovies(movies);\n};\n\nconst fillSearchParams = () => {\n  searchParams = {\n    searchQuery: searchInput.value,\n    year: document.querySelector('#catalog-year-select').value,\n    genre: document.querySelector('#catalog-genre-select').value,\n    country: document.querySelector('#catalog-country-select').value,\n  };\n};\n\nconst handleSubmit = async event => {\n  event.preventDefault();\n\n  fillSearchParams();\n\n  const movies = await fetchMovies(searchParams);\n\n  displaySelects();\n  renderMovies(movies);\n};\n\nconfigureSelects();\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["parcelRequire","$hY6V0","$bec8a5482a6b17f9$var$refs","cardContainer","document","querySelector","$bec8a5482a6b17f9$var$requestServer","RequestServer","async","$7o4ng","requestGenre","responseWeek","trendingWeek","results","data","markupCard","$3huUq","markup","innerHTML","error","console","log","$bec8a5482a6b17f9$var$ontrendingWeek","$d503b5314f70d137$var$requestServer","$d503b5314f70d137$var$form","$d503b5314f70d137$var$searchInput","$d503b5314f70d137$var$yearSelect","$d503b5314f70d137$var$genreSelect","$d503b5314f70d137$var$countrySelect","$d503b5314f70d137$var$list","$d503b5314f70d137$var$notFoundMessage","$d503b5314f70d137$var$errorMessage","$d503b5314f70d137$var$searchParams","searchQuery","undefined","year","genre","country","$d503b5314f70d137$var$listDisplay","hideClassName","show","classList","remove","this","hide","add","$d503b5314f70d137$var$notFoundMessageDisplay","$d503b5314f70d137$var$errorMessageDisplay","$d503b5314f70d137$var$addSelectOption","selectEl","optionValue","optionLabel","option","createElement","value","append","$d503b5314f70d137$var$fetchMovies","params","query","$d503b5314f70d137$var$searchParamsToQuery","searchMovies","$d503b5314f70d137$var$renderMovies","movies","length","moviesMarkup","Date","getFullYear","$d503b5314f70d137$var$configureYearSelect","movieGenre","genres","forEach","id","name","$d503b5314f70d137$var$configureGenreSelect","addEventListener","event","preventDefault","classNameToRemove","$d503b5314f70d137$var$displaySelects"],"version":3,"file":"catalog.baa3ce1a.js.map"}