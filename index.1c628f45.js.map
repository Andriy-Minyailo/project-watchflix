{"mappings":"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","sources":["src/js/test.js","src/js/menu.js","src/js/upcoming.js"],"sourcesContent":["\n\n// Приклад роботи з бекендом\nimport { RequestServer } from \"./requestServer\";\n\nconst requestServer = new RequestServer();\n\nasync function test() {\n    try {\n        const response = await requestServer.trendingDay();\n        console.log(response);\n    \n    } catch (error) {\n        console.error(error);\n    }\n}\n\ntest();\n","\n(() => {\n  const menu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n\n  function toggleMenu() {\n    menu.classList.toggle('visually-hidden');\n  }\n  \n})();\n\n// ---------------------------------\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\n//   document.getElementById(\"header-menu\").addEventListener(\"click\", function() {\n//     document.querySelector(\"header-menu\").classList.toggle(\"open\")\n//   })\n// })","import { RequestServer } from './requestServer';\nimport { KEY_MOVIE_LIST } from \"./localStorage\";\nimport { getMovieList } from \"./localStorage\";\nimport { saveMovieList } from \"./localStorage\";\nimport { loadMoveList } from \"./localStorage\";\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\nconst btn = document.querySelector('#upcoming-remind-btn');\n\nconst requestServer = new RequestServer();\nlet currenyMovie;\nlet filmIndex;\nconst stateButtonUpc = {\n    addText: 'Remind me',\n    removeText: 'Delete from my library',\n    localMarkup: '',\n    currentStateButton: true\n}\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n \n\n\n  console.log(movie.id);\n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n\n const { poster_path,\n    original_title = '',\n    overview = '',\n    release_date = '',\n    vote_average = '',\n    id } = movie;\n\n  checkMovieLocalStorage(id);\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n  const genreText = genreEl.innerText;\n  const genreTwo = genreText.split(',').slice(0, 2);\n   let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n      let rating = vote_average.toFixed(1);\n stateButtonUpc.localMarkup = {\n        id: id,\n        str: `<img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${genreTwo} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>`\n    };\n  console.log(stateButtonUpc.localMarkup);\n\n  \n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n\nconsole.log(currenyMovie);\n\n\n\n\nfunction checkMovieLocalStorage(idFilm) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    // console.log(currentState);\n    if (!currentState) {\n        // const filmIndex = currentState.findIndex(obj => obj.id === Number(id));\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText);\n        return;\n    }\n    // const [idLocalArray] = Object.keys(currentState);\n     filmIndex = currentState.findIndex(obj => obj.id === idFilm);\n   \n    // console.log(filmIndex);\n        if (filmIndex !== -1) {\n        btn.textContent = stateButtonUpc.removeText;\n        stateButtonUpc.currentStateButton = false;\n       \n        // console.log(stateButton.removeText);\n        } else {\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText); \n  }\n}\nif (btn) {\n  btn.addEventListener('click', onLoadLocalStorage);\n}\n     \nfunction onLoadLocalStorage(event) {\n   \n    console.log(stateButtonUpc.currentStateButton);\n    if (stateButtonUpc.currentStateButton) {\n        loadMoveList(stateButtonUpc.localMarkup);\n        stateButtonUpc.currentStateButton = false;\n        btn.textContent = stateButtonUpc.removeText;\n        console.log('add');\n    } else {\n        deleteLocalFilm(filmIndex);\n        stateButtonUpc.currentStateButton = true;\n        btn.textContent = stateButtonUpc.addText;\n        console.log('remove');\n        // checkLocalStorage(KEY_MOVIE_LIST);\n    }\n}\n\n\nfunction deleteLocalFilm(index) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    if (currentState.length === 1) {\n        localStorage.removeItem(KEY_MOVIE_LIST);\n        return;\n    }\n  currentState.splice(index, 1);\n  saveMovieList(KEY_MOVIE_LIST, currentState);\n  // checkLocalStorage();\n} "],"names":["$bpxeT","parcelRequire","$64ed97a34fea905c$var$requestServer","RequestServer","$64ed97a34fea905c$var$_test","$parcel$interopDefault","$2TvXO","mark","_callee","response","trendingDay","_ctx","sent","console","log","error","t0","apply","this","arguments","$64ed97a34fea905c$var$test","menu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","classList","toggle","addEventListener","$4c6aab06649ec8ef$var$filmIndex","$4c6aab06649ec8ef$var$loadingMessageEl","$4c6aab06649ec8ef$var$noDataMessageEl","$4c6aab06649ec8ef$var$errorMessageEl","$4c6aab06649ec8ef$var$movieEl","$4c6aab06649ec8ef$var$btn","$4c6aab06649ec8ef$var$requestServer","$cFGTe","$4c6aab06649ec8ef$var$stateButtonUpc","addText","removeText","localMarkup","currentStateButton","$4c6aab06649ec8ef$var$fetchUpcoming","newFilms","$4c6aab06649ec8ef$var$fillData","$4c6aab06649ec8ef$var$hideLoadingMessage","$4c6aab06649ec8ef$var$showMovie","$4c6aab06649ec8ef$var$showErrorMessage","movies","moviesLength","movie","poster_path","_original_title","original_title","_overview","overview","_release_date","release_date","_vote_average","vote_average","id","genreEl","genreText","genreTwo","releaseDate","path","rating","data","results","length","$4c6aab06649ec8ef$var$showNoDataMessage","Math","round","random","$4c6aab06649ec8ef$var$fillTitle","$4c6aab06649ec8ef$var$fillBackdrop","backdrop_path","$4c6aab06649ec8ef$var$fillReleaseDate","$4c6aab06649ec8ef$var$fillVote","vote_count","$4c6aab06649ec8ef$var$fillPopularity","popularity","$4c6aab06649ec8ef$var$fillGenre","$4c6aab06649ec8ef$var$fillAbout","$4c6aab06649ec8ef$var$checkMovieLocalStorage","innerText","split","slice","substring","concat","toFixed","str","add","remove","value","formattedDate","Date","toLocaleDateString","replace","voteAverage","voteCount","voteAverageEl","voteCountEl","genres","currentMovieGenres","genresString","movieGenre","genre_ids","map","find","genre","name","join","backdropPath","src","idFilm","currentState","$UL92Z","getMovieList","KEY_MOVIE_LIST","textContent","findIndex","obj","$4c6aab06649ec8ef$var$currenyMovie","event","loadMoveList","index","localStorage","removeItem","splice","saveMovieList","$4c6aab06649ec8ef$var$deleteLocalFilm"],"version":3,"file":"index.1c628f45.js.map"}