{"mappings":"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","sources":["src/index.js","src/js/weekly-trends.js","src/js/upcoming.js"],"sourcesContent":["// Зразок імпорту\nimport './js/modal';\nimport './js/toggel';\nimport './js/menu';\nimport './js/hero';\nimport './js/weekly-trends';\nimport './js/upcoming';\nimport './js/localModalJs';\nimport './js/footerModal';\nimport './js/scrollUp';\n\n","import { RequestServer } from './requestServer';\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres';\n\nconst refs = {\n  weeklyCard: document.querySelector('.card'),\n};\nconst requestServer = new RequestServer();\n\nasync function weeklyTrend() {\n  try {\n    const genres = await requestGenre();\n    const responseWeek = await requestServer.trendingWeek();\n    const { results } = responseWeek.data;\n    const markupCard = markup(results.slice(0, 3));\n\n    refs.weeklyCard.innerHTML = markupCard;\n\n    const weeklyTitle = document.querySelector('.weekly-tr__title');\n    let LightSwitcher = document.querySelector('.switcher');\n    let isLight = localStorage.getItem('isLight');\n    if (isLight === 'true') {\n      weeklyTitle.classList.add('weekly-tr__title-light');\n    }\n    LightSwitcher.addEventListener('click', () => {\n      weeklyTitle.classList.toggle('weekly-tr__title-light');\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nweeklyTrend();\n","import { RequestServer } from './requestServer';\nimport { KEY_MOVIE_LIST } from \"./localStorage\";\nimport { getMovieList } from \"./localStorage\";\nimport { saveMovieList } from \"./localStorage\";\nimport { loadMoveList } from \"./localStorage\";\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\nconst btn = document.querySelector('#upcoming-remind-btn');\n\nconst requestServer = new RequestServer();\nlet currenyMovie;\nlet filmIndex;\nconst stateButtonUpc = {\n    addText: 'Remind me',\n    removeText: 'Delete from my library',\n    localMarkup: '',\n    currentStateButton: true\n}\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n \n\n\n  \n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n\n const { poster_path,\n    original_title = '',\n    overview = '',\n    release_date = '',\n    vote_average = '',\n    id } = movie;\n\n  checkMovieLocalStorage(id);\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n  const genreText = genreEl.innerText;\n  const genreTwo = genreText.split(',').slice(0, 2);\n   let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n    let rating = '';\n          for (let i = 1; i <= 5; i++) {\n            let ratingClass = 'fa-star-o';\n            if (i * 2 <= vote_average) {\n              ratingClass = 'fa-star';\n            } else if (i * 2 - 1 <= vote_average) {\n              ratingClass = 'fa-star-half-o';\n            }\n            rating += `<span class=\"fa star ${ratingClass}\"> </span>`;\n          }\n stateButtonUpc.localMarkup = {\n        id: id,\n        str: `<img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${genreTwo} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>`\n    };\n \n\n  \n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n\n\n\n\n\n\nfunction checkMovieLocalStorage(idFilm) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n   \n    if (!currentState) {\n        // const filmIndex = currentState.findIndex(obj => obj.id === Number(id));\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n\n        return;\n    }\n    // const [idLocalArray] = Object.keys(currentState);\n     filmIndex = currentState.findIndex(obj => obj.id === idFilm);\n   \n   \n        if (filmIndex !== -1) {\n        btn.textContent = stateButtonUpc.removeText;\n        stateButtonUpc.currentStateButton = false;\n       \n       \n        } else {\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n   \n  }\n}\nif (btn) {\n  btn.addEventListener('click', onLoadLocalStorage);\n}\n     \nfunction onLoadLocalStorage(event) {\n   \n   \n    if (stateButtonUpc.currentStateButton) {\n        loadMoveList(stateButtonUpc.localMarkup);\n        stateButtonUpc.currentStateButton = false;\n        btn.textContent = stateButtonUpc.removeText;\n       \n    } else {\n        deleteLocalFilm(filmIndex);\n        stateButtonUpc.currentStateButton = true;\n        btn.textContent = stateButtonUpc.addText;\n     \n        // checkLocalStorage(KEY_MOVIE_LIST);\n    }\n}\n\n\nfunction deleteLocalFilm(index) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    if (currentState.length === 1) {\n        localStorage.removeItem(KEY_MOVIE_LIST);\n        return;\n    }\n  currentState.splice(index, 1);\n  saveMovieList(KEY_MOVIE_LIST, currentState);\n  // checkLocalStorage();\n} "],"names":["parcelRequire","$hY6V0","$d395fb91404b7f70$var$refs","weeklyCard","document","querySelector","$d395fb91404b7f70$var$requestServer","RequestServer","async","$7o4ng","requestGenre","responseWeek","trendingWeek","results","data","markupCard","$3huUq","markup","slice","innerHTML","weeklyTitle","LightSwitcher","localStorage","getItem","classList","add","addEventListener","toggle","error","console","log","$d395fb91404b7f70$var$weeklyTrend","$65414923e0a79c46$var$loadingMessageEl","$65414923e0a79c46$var$noDataMessageEl","$65414923e0a79c46$var$errorMessageEl","$65414923e0a79c46$var$movieEl","$65414923e0a79c46$var$btn","$65414923e0a79c46$var$requestServer","$65414923e0a79c46$var$filmIndex","$65414923e0a79c46$var$stateButtonUpc","addText","removeText","localMarkup","currentStateButton","$65414923e0a79c46$var$fillData","response","movies","moviesLength","length","$65414923e0a79c46$var$hideLoadingMessage","$65414923e0a79c46$var$showNoDataMessage","movie","Math","round","random","$65414923e0a79c46$var$fillTitle","original_title","$65414923e0a79c46$var$fillBackdrop","backdrop_path","$65414923e0a79c46$var$fillReleaseDate","release_date","$65414923e0a79c46$var$fillVote","vote_average","vote_count","$65414923e0a79c46$var$fillPopularity","popularity","$65414923e0a79c46$var$fillGenre","$65414923e0a79c46$var$fillAbout","overview","poster_path","id","idFilm","currentState","$31u3U","getMovieList","KEY_MOVIE_LIST","textContent","findIndex","obj","$65414923e0a79c46$var$checkMovieLocalStorage","genreTwo","innerText","split","releaseDate","substring","path","rating","i","ratingClass","str","remove","$65414923e0a79c46$var$showErrorMessage","$65414923e0a79c46$var$showMovie","value","formattedDate","Date","toLocaleDateString","replace","voteAverage","voteCount","voteAverageEl","voteCountEl","toFixed","genreEl","genres","movieGenre","genresString","genre_ids","map","find","genre","name","join","backdropPath","src","newFilms","$65414923e0a79c46$var$fetchUpcoming","event","loadMoveList","index","removeItem","splice","saveMovieList","$65414923e0a79c46$var$deleteLocalFilm"],"version":3,"file":"index.e3d76499.js.map"}