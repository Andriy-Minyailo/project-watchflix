{"mappings":"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","sources":["src/catalog.js","src/js/elementCard.js","src/js/catalogFilter.js"],"sourcesContent":["import './js/modal';\nimport './js/toggel';\nimport './js/elementCard';\nimport './js/hero';\n\n\n\nimport './js/localModalJs';\n\nimport './js/catalogFilter';\n\n\n","import { RequestServer } from \"./requestServer\";\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres'\n\nconst refs = {\n    cardContainer: document.querySelector('.card')\n}\nconst requestServer = new RequestServer();\n\nasync function ontrendingWeek() {\n  \n    try {\n        const genres = await requestGenre();\n        const responseWeek = await requestServer.trendingWeek();\n        const { results } = responseWeek.data;\n        // console.log(results);\n        // const test = results.slice(0, 3);\n        const markupCard = markup(results);\n\n        refs.cardContainer.innerHTML =  markupCard;\n    } catch(error) {\n    console.log(error);\n  };\n}\nontrendingWeek();\n\n","import { markup } from './markup';\nimport { RequestServer } from './requestServer';\n\nconst requestServer = new RequestServer();\nconst form = document.querySelector('#catalog-search-form');\nconst searchInput = document.querySelector('#catalog-search-input');\nconst yearSelect = document.querySelector('#catalog-year-select');\nconst genreSelect = document.querySelector('#catalog-genre-select');\nconst countrySelect = document.querySelector('#catalog-country-select');\nconst list = document.querySelector('#catalog-list');\nconst notFoundMessage = document.querySelector('#catalog-not-found-message');\nconst errorMessage = document.querySelector('#catalog-error-message');\n\nlet currentPage = 1;\n\nlet searchParams = {\n  searchQuery: undefined,\n  year: undefined,\n  genre: undefined,\n  country: undefined,\n};\n\nconst listDisplay = {\n  hideClassName: 'catalog__list--hidden',\n  show() {\n    list.classList.remove(this.hideClassName);\n  },\n  hide() {\n    list.classList.add(this.hideClassName);\n  },\n};\n\nconst notFoundMessageDisplay = {\n  hideClassName: 'catalog__message--hidden',\n  show() {\n    notFoundMessage.classList.remove(this.hideClassName);\n  },\n  hide() {\n    notFoundMessage.classList.add(this.hideClassName);\n  },\n};\n\nconst errorMessageDisplay = {\n  hideClassName: 'catalog__message--hidden',\n  show() {\n    errorMessage.classList.remove(this.hideClassName);\n  },\n  hide() {\n    errorMessage.classList.add(this.hideClassName);\n  },\n};\n\nconst displaySelects = () => {\n  const classNameToRemove = 'catalog__search-form-input--hidden';\n\n  yearSelect.classList.remove(classNameToRemove);\n  genreSelect.classList.remove(classNameToRemove);\n  countrySelect.classList.remove(classNameToRemove);\n};\n\nconst addSelectOption = (selectEl, optionValue, optionLabel) => {\n  const option = document.createElement('option');\n\n  option.value = optionValue;\n  option.innerHTML = optionLabel ?? optionValue;\n\n  selectEl.append(option);\n};\n\nconst configureYearSelect = () => {\n  const startFromYear = 2000;\n\n  for (let year = new Date().getFullYear(); year >= startFromYear; year--) {\n    addSelectOption(yearSelect, year);\n  }\n};\n\nconst configureGenreSelect = async () => {\n  const genres = (await requestServer.movieGenre()).data.genres;\n\n  genres.forEach(genre => addSelectOption(genreSelect, genre.id, genre.name));\n};\n\nconst configureSelects = () => {\n  configureYearSelect();\n  configureGenreSelect();\n};\n\nconst searchParamsToQuery = params => {\n  const searchQuery = params.searchQuery;\n  const year = params.year;\n  const genre = params.genre;\n  const country = params.country;\n\n  let query = '';\n\n  if (searchQuery) {\n    query += searchQuery;\n  }\n\n  if (year) {\n    query += `&year=${year}`;\n  }\n\n  if (genre) {\n    query += `&genre=${genre}`;\n  }\n\n  if (country) {\n    query += `&country=${country}`;\n  }\n\n  return query;\n};\n\nconst fetchMovies = async params => {\n  try {\n    const query = searchParamsToQuery(params);\n    const response = await requestServer.searchMovies(query);\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n\n    listDisplay.hide();\n    errorMessageDisplay.show();\n  }\n};\n\nconst renderMovies = async movies => {\n  if (movies.length) {\n    const moviesMarkup = markup(movies);\n\n    errorMessageDisplay.hide();\n    notFoundMessageDisplay.hide();\n\n    list.innerHTML = moviesMarkup;\n    listDisplay.show();\n  } else {\n    listDisplay.hide();\n    notFoundMessageDisplay.show();\n  }\n};\n\nconst handlePageChange = async event => {\n  currentPage = event.target.dataset.page;\n\n  const movies = await fetchMovies();\n\n  await renderMovies(movies);\n};\n\nconst fillSearchParams = () => {\n  searchParams = {\n    searchQuery: searchInput.value,\n    year: document.querySelector('#catalog-year-select').value,\n    genre: document.querySelector('#catalog-genre-select').value,\n    country: document.querySelector('#catalog-country-select').value,\n  };\n};\n\nconst handleSubmit = async event => {\n  event.preventDefault();\n\n  fillSearchParams();\n\n  const movies = await fetchMovies(searchParams);\n\n  displaySelects();\n  renderMovies(movies);\n};\n\nconfigureSelects();\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["parcelRequire","$bpxeT","$6bf3d6d00e56e4f2$var$refs","cardContainer","document","querySelector","$6bf3d6d00e56e4f2$var$requestServer","$cFGTe","RequestServer","$6bf3d6d00e56e4f2$var$_ontrendingWeek","$parcel$interopDefault","$2TvXO","mark","_callee","responseWeek","results","markupCard","$3qwTJ","requestGenre","_ctx","sent","trendingWeek","data","$1KhuP","markup","innerHTML","console","log","t0","apply","this","arguments","$6bf3d6d00e56e4f2$var$ontrendingWeek","$af377e7e032a04a9$var$requestServer","$af377e7e032a04a9$var$form","$af377e7e032a04a9$var$searchInput","$af377e7e032a04a9$var$yearSelect","$af377e7e032a04a9$var$genreSelect","$af377e7e032a04a9$var$countrySelect","$af377e7e032a04a9$var$list","$af377e7e032a04a9$var$notFoundMessage","$af377e7e032a04a9$var$errorMessage","$af377e7e032a04a9$var$searchParams","searchQuery","undefined","year","genre","country","$af377e7e032a04a9$var$listDisplay","hideClassName","show","classList","remove","hide","add","$af377e7e032a04a9$var$notFoundMessageDisplay","$af377e7e032a04a9$var$errorMessageDisplay","$af377e7e032a04a9$var$addSelectOption","selectEl","optionValue","optionLabel","option","createElement","value","append","$af377e7e032a04a9$var$configureGenreSelect","movieGenre","genres","forEach","id","name","$af377e7e032a04a9$var$searchParamsToQuery","params","query","concat","$af377e7e032a04a9$var$fetchMovies","response","searchMovies","$af377e7e032a04a9$var$renderMovies","movies","moviesMarkup","length","$af377e7e032a04a9$var$handleSubmit","event","target","dataset","page","preventDefault","classNameToRemove","Date","getFullYear","$af377e7e032a04a9$var$configureYearSelect","addEventListener"],"version":3,"file":"catalog.ab9f6b5d.js.map"}