{"mappings":"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","sources":["src/index.js","src/js/weekly-trends.js","src/js/upcoming.js"],"sourcesContent":["// Зразок імпорту\nimport './js/modal';\nimport './js/toggel';\nimport './js/menu';\nimport './js/hero';\nimport './js/weekly-trends';\nimport './js/upcoming';\nimport './js/localModalJs';\nimport './js/footerModal';\nimport './js/loaderSpinner';\nimport './js/scrollUp';\n","import { RequestServer } from './requestServer';\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres';\n\nconst refs = {\n  weeklyCard: document.querySelector('.card'),\n};\nconst requestServer = new RequestServer();\n\nasync function weeklyTrend() {\n  try {\n    const genres = await requestGenre();\n    const responseWeek = await requestServer.trendingWeek();\n    const { results } = responseWeek.data;\n    const markupCard = markup(results.slice(0, 3));\n\n    refs.weeklyCard.innerHTML = markupCard;\n\n    const weeklyTitle = document.querySelector('.weekly-tr__title');\n    let LightSwitcher = document.querySelector('.switcher');\n    let isLight = localStorage.getItem('isLight');\n    if (isLight === 'true') {\n      weeklyTitle.classList.add('weekly-tr__title-light');\n    }\n    LightSwitcher.addEventListener('click', () => {\n      weeklyTitle.classList.toggle('weekly-tr__title-light');\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nweeklyTrend();\n","import { RequestServer } from './requestServer';\nimport { KEY_MOVIE_LIST } from \"./localStorage\";\nimport { getMovieList } from \"./localStorage\";\nimport { saveMovieList } from \"./localStorage\";\nimport { loadMoveList } from \"./localStorage\";\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\nconst btn = document.querySelector('#upcoming-remind-btn');\n\nconst requestServer = new RequestServer();\nlet currenyMovie;\nlet filmIndex;\nconst stateButtonUpc = {\n    addText: 'Remind me',\n    removeText: 'Delete from my library',\n    localMarkup: '',\n    currentStateButton: true\n}\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n \n\n\n  \n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n\n const { poster_path,\n    original_title = '',\n    overview = '',\n    release_date = '',\n    vote_average = '',\n    id } = movie;\n\n  checkMovieLocalStorage(id);\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n  const genreText = genreEl.innerText;\n  const genreTwo = genreText.split(',').slice(0, 2);\n   let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n    let rating = '';\n          for (let i = 1; i <= 5; i++) {\n            let ratingClass = 'fa-star-o';\n            if (i * 2 <= vote_average) {\n              ratingClass = 'fa-star';\n            } else if (i * 2 - 1 <= vote_average) {\n              ratingClass = 'fa-star-half-o';\n            }\n            rating += `<span class=\"fa star ${ratingClass}\"> </span>`;\n          }\n stateButtonUpc.localMarkup = {\n        id: id,\n        str: `<img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${genreTwo} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>`\n    };\n \n\n  \n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n\n\n\n\n\n\nfunction checkMovieLocalStorage(idFilm) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n   \n    if (!currentState) {\n        // const filmIndex = currentState.findIndex(obj => obj.id === Number(id));\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n\n        return;\n    }\n    // const [idLocalArray] = Object.keys(currentState);\n     filmIndex = currentState.findIndex(obj => obj.id === idFilm);\n   \n   \n        if (filmIndex !== -1) {\n        btn.textContent = stateButtonUpc.removeText;\n        stateButtonUpc.currentStateButton = false;\n       \n       \n        } else {\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n   \n  }\n}\nif (btn) {\n  btn.addEventListener('click', onLoadLocalStorage);\n}\n     \nfunction onLoadLocalStorage(event) {\n   \n   \n    if (stateButtonUpc.currentStateButton) {\n        loadMoveList(stateButtonUpc.localMarkup);\n        stateButtonUpc.currentStateButton = false;\n        btn.textContent = stateButtonUpc.removeText;\n       \n    } else {\n        deleteLocalFilm(filmIndex);\n        stateButtonUpc.currentStateButton = true;\n        btn.textContent = stateButtonUpc.addText;\n     \n        // checkLocalStorage(KEY_MOVIE_LIST);\n    }\n}\n\n\nfunction deleteLocalFilm(index) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    if (currentState.length === 1) {\n        localStorage.removeItem(KEY_MOVIE_LIST);\n        return;\n    }\n  currentState.splice(index, 1);\n  saveMovieList(KEY_MOVIE_LIST, currentState);\n  // checkLocalStorage();\n} "],"names":["parcelRequire","$bpxeT","$fe3a3a1ac89f0559$var$refs","weeklyCard","document","querySelector","$fe3a3a1ac89f0559$var$requestServer","$cFGTe","RequestServer","$fe3a3a1ac89f0559$var$_weeklyTrend","$parcel$interopDefault","$2TvXO","mark","_callee","responseWeek","results","markupCard","weeklyTitle","LightSwitcher","$3qwTJ","requestGenre","_ctx","sent","trendingWeek","data","$1KhuP","markup","slice","innerHTML","localStorage","getItem","classList","add","addEventListener","toggle","console","log","t0","apply","this","arguments","$fe3a3a1ac89f0559$var$weeklyTrend","$4c6aab06649ec8ef$var$filmIndex","$4c6aab06649ec8ef$var$loadingMessageEl","$4c6aab06649ec8ef$var$noDataMessageEl","$4c6aab06649ec8ef$var$errorMessageEl","$4c6aab06649ec8ef$var$movieEl","$4c6aab06649ec8ef$var$btn","$4c6aab06649ec8ef$var$requestServer","$4c6aab06649ec8ef$var$stateButtonUpc","addText","removeText","localMarkup","currentStateButton","$4c6aab06649ec8ef$var$fetchUpcoming","response","newFilms","$4c6aab06649ec8ef$var$fillData","$4c6aab06649ec8ef$var$hideLoadingMessage","$4c6aab06649ec8ef$var$showMovie","error","$4c6aab06649ec8ef$var$showErrorMessage","movies","moviesLength","movie","poster_path","_original_title","original_title","_overview","overview","_release_date","release_date","_vote_average","vote_average","id","genreEl","genreText","genreTwo","releaseDate","path","rating","i","ratingClass","length","$4c6aab06649ec8ef$var$showNoDataMessage","Math","round","random","$4c6aab06649ec8ef$var$fillTitle","$4c6aab06649ec8ef$var$fillBackdrop","backdrop_path","$4c6aab06649ec8ef$var$fillReleaseDate","$4c6aab06649ec8ef$var$fillVote","vote_count","$4c6aab06649ec8ef$var$fillPopularity","popularity","$4c6aab06649ec8ef$var$fillGenre","$4c6aab06649ec8ef$var$fillAbout","$4c6aab06649ec8ef$var$checkMovieLocalStorage","innerText","split","substring","concat","str","remove","value","formattedDate","Date","toLocaleDateString","replace","voteAverage","voteCount","voteAverageEl","voteCountEl","toFixed","genres","currentMovieGenres","genresString","movieGenre","genre_ids","map","find","genre","name","join","backdropPath","src","idFilm","currentState","$UL92Z","getMovieList","KEY_MOVIE_LIST","textContent","findIndex","obj","event","loadMoveList","index","removeItem","splice","saveMovieList","$4c6aab06649ec8ef$var$deleteLocalFilm"],"version":3,"file":"index.5a818160.js.map"}