{"mappings":"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","sources":["src/index.js","src/js/menu.js","src/js/weekly-trends.js","src/js/upcoming.js"],"sourcesContent":["// Зразок імпорту\nimport './js/modal';\nimport './js/toggel';\nimport './js/menu';\nimport './js/hero';\nimport './js/weekly-trends';\nimport './js/upcoming';\nimport './js/localModalJs';\nimport './js/footerModal';\n\n","\n(() => {\n  const menu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n\n  function toggleMenu() {\n    menu.classList.toggle('visually-hidden');\n  }\n  \n})();\n\n// ---------------------------------\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\n//   document.getElementById(\"header-menu\").addEventListener(\"click\", function() {\n//     document.querySelector(\"header-menu\").classList.toggle(\"open\")\n//   })\n// })","import { RequestServer } from './requestServer';\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres';\n\n\nconst refs = {\n  weeklyCard: document.querySelector('.card'),\n};\nconst requestServer = new RequestServer();\n\nasync function weeklyTrend() {\n  try {\n    const genres = await requestGenre();\n    const responseWeek = await requestServer.trendingWeek();\n    const { results } = responseWeek.data;\n    const markupCard = markup(results.slice(0, 3));\n\n    refs.weeklyCard.innerHTML = markupCard;\n    \n  } catch (error) {\n    console.log(error);\n  }\n}\nweeklyTrend();\n","import { RequestServer } from './requestServer';\nimport { KEY_MOVIE_LIST } from \"./localStorage\";\nimport { getMovieList } from \"./localStorage\";\nimport { saveMovieList } from \"./localStorage\";\nimport { loadMoveList } from \"./localStorage\";\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\nconst btn = document.querySelector('#upcoming-remind-btn');\n\nconst requestServer = new RequestServer();\nlet currenyMovie;\nlet filmIndex;\nconst stateButtonUpc = {\n    addText: 'Remind me',\n    removeText: 'Delete from my library',\n    localMarkup: '',\n    currentStateButton: true\n}\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n \n\n\n  console.log(movie.id);\n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n\n const { poster_path,\n    original_title = '',\n    overview = '',\n    release_date = '',\n    vote_average = '',\n    id } = movie;\n\n  checkMovieLocalStorage(id);\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n  const genreText = genreEl.innerText;\n  const genreTwo = genreText.split(',').slice(0, 2);\n   let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n      let rating = vote_average.toFixed(1);\n stateButtonUpc.localMarkup = {\n        id: id,\n        str: `<img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${genreTwo} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>`\n    };\n  console.log(stateButtonUpc.localMarkup);\n\n  \n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n\nconsole.log(currenyMovie);\n\n\n\n\nfunction checkMovieLocalStorage(idFilm) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    // console.log(currentState);\n    if (!currentState) {\n        // const filmIndex = currentState.findIndex(obj => obj.id === Number(id));\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText);\n        return;\n    }\n    // const [idLocalArray] = Object.keys(currentState);\n     filmIndex = currentState.findIndex(obj => obj.id === idFilm);\n   \n    // console.log(filmIndex);\n        if (filmIndex !== -1) {\n        btn.textContent = stateButtonUpc.removeText;\n        stateButtonUpc.currentStateButton = false;\n       \n        // console.log(stateButton.removeText);\n        } else {\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText); \n  }\n}\nif (btn) {\n  btn.addEventListener('click', onLoadLocalStorage);\n}\n     \nfunction onLoadLocalStorage(event) {\n   \n    console.log(stateButtonUpc.currentStateButton);\n    if (stateButtonUpc.currentStateButton) {\n        loadMoveList(stateButtonUpc.localMarkup);\n        stateButtonUpc.currentStateButton = false;\n        btn.textContent = stateButtonUpc.removeText;\n        console.log('add');\n    } else {\n        deleteLocalFilm(filmIndex);\n        stateButtonUpc.currentStateButton = true;\n        btn.textContent = stateButtonUpc.addText;\n        console.log('remove');\n        // checkLocalStorage(KEY_MOVIE_LIST);\n    }\n}\n\n\nfunction deleteLocalFilm(index) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    if (currentState.length === 1) {\n        localStorage.removeItem(KEY_MOVIE_LIST);\n        return;\n    }\n  currentState.splice(index, 1);\n  saveMovieList(KEY_MOVIE_LIST, currentState);\n  // checkLocalStorage();\n} "],"names":["parcelRequire","menu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","classList","toggle","addEventListener","$bpxeT","$fe3a3a1ac89f0559$var$refs","weeklyCard","$fe3a3a1ac89f0559$var$requestServer","$cFGTe","RequestServer","$fe3a3a1ac89f0559$var$_weeklyTrend","$parcel$interopDefault","$2TvXO","mark","_callee","responseWeek","results","markupCard","$3qwTJ","requestGenre","_ctx","sent","trendingWeek","data","$1KhuP","markup","slice","innerHTML","console","log","t0","apply","this","arguments","$fe3a3a1ac89f0559$var$weeklyTrend","$4c6aab06649ec8ef$var$filmIndex","$4c6aab06649ec8ef$var$loadingMessageEl","$4c6aab06649ec8ef$var$noDataMessageEl","$4c6aab06649ec8ef$var$errorMessageEl","$4c6aab06649ec8ef$var$movieEl","$4c6aab06649ec8ef$var$btn","$4c6aab06649ec8ef$var$requestServer","$4c6aab06649ec8ef$var$stateButtonUpc","addText","removeText","localMarkup","currentStateButton","$4c6aab06649ec8ef$var$fetchUpcoming","response","newFilms","$4c6aab06649ec8ef$var$fillData","$4c6aab06649ec8ef$var$hideLoadingMessage","$4c6aab06649ec8ef$var$showMovie","error","$4c6aab06649ec8ef$var$showErrorMessage","movies","moviesLength","movie","poster_path","_original_title","original_title","_overview","overview","_release_date","release_date","_vote_average","vote_average","id","genreEl","genreText","genreTwo","releaseDate","path","rating","length","$4c6aab06649ec8ef$var$showNoDataMessage","Math","round","random","$4c6aab06649ec8ef$var$fillTitle","$4c6aab06649ec8ef$var$fillBackdrop","backdrop_path","$4c6aab06649ec8ef$var$fillReleaseDate","$4c6aab06649ec8ef$var$fillVote","vote_count","$4c6aab06649ec8ef$var$fillPopularity","popularity","$4c6aab06649ec8ef$var$fillGenre","$4c6aab06649ec8ef$var$fillAbout","$4c6aab06649ec8ef$var$checkMovieLocalStorage","innerText","split","substring","concat","toFixed","str","add","remove","value","formattedDate","Date","toLocaleDateString","replace","voteAverage","voteCount","voteAverageEl","voteCountEl","genres","currentMovieGenres","genresString","movieGenre","genre_ids","map","find","genre","name","join","backdropPath","src","idFilm","currentState","$UL92Z","getMovieList","KEY_MOVIE_LIST","textContent","findIndex","obj","$4c6aab06649ec8ef$var$currenyMovie","event","loadMoveList","index","localStorage","removeItem","splice","saveMovieList","$4c6aab06649ec8ef$var$deleteLocalFilm"],"version":3,"file":"index.4bfdc6b0.js.map"}