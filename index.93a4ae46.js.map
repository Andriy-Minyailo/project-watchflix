{"mappings":"iiBAGA,IAAAA,EAAAC,EAAA,S,aAEMC,EAAgB,IAAI,G,cAAAC,e,SAEXC,I,OAAAA,EAAfC,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAEcC,E,2FAAiBP,EAAcQ,c,OAA/BD,EAAQE,EAAAC,KACdC,QAAQC,IAAIL,G,gDAGZI,QAAQE,MAAKJ,EAAAK,I,0DANFC,MAAAC,KAAAC,U,aAAJf,EAAIa,MAAAC,KAAAC,U,CAUnBC,G,sBChBC,WACC,IAAMC,EAAOC,SAASC,cAAc,sBAC9BC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,kBAM5C,SAASG,IACPL,EAAKM,UAAUC,OAAO,kB,CALxBJ,EAAYK,iBAAiB,QAASH,GACtCD,EAAaI,iBAAiB,QAASH,EAOxC,CAbA,G,WCDD1B,EAAAC,EAAA,S,aAAA,I,uCAIM6B,EAAO,CACXC,WAAYT,SAASC,cAAc,UAE/BS,EAAgB,IAAI,EAAAC,EAAA9B,e,SAEX+B,I,OAAAA,EAAf7B,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAGU2B,EACEC,EACFC,E,4FAHe,EAAAC,EAAAC,gB,cAAT5B,EAAAC,K,SACeoB,EAAcQ,e,OAAnCL,EAAYxB,EAAAC,KACZwB,EAAcD,EAAaM,KAAzBL,QACFC,GAAa,EAAAK,EAAAC,QAAOP,EAAQQ,MAAM,EAAG,IAE3Cd,EAAKC,WAAWc,UAAYR,E,kDAE5BxB,QAAQC,IAAGH,EAAAK,I,2DATWC,MAAAC,KAAAC,U,aAAXe,EAAWjB,MAAAC,KAAAC,U,CAY1B2B,GCrBA9C,EAAAC,EAAA,S,0BAAA,I,EAEM8C,EAAmBzB,SAASC,cAAc,6BAC1CyB,EAAkB1B,SAASC,cAAc,6BACzC0B,EAAiB3B,SAASC,cAAc,2BACxC2B,EAAU5B,SAASC,cAAc,mBAEjC4B,EAAgB,IAAI,EAAAlB,EAAA9B,eAEpBiD,G,EAAgB/C,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,I,IAEZC,E,2FAAiB0C,EAAcE,W,cAA/B5C,EAAQE,EAAAC,K,SAER0C,EAAS7C,G,OAEf8C,IACAC,I,kDAEA3C,QAAQE,MAAKJ,EAAAK,IAEbuC,IACAE,I,sGAIEH,EAAQ,W,MAAGjD,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IACfiD,EACAC,EASAC,E,qEAVAF,EAASjD,EAASgC,KAAKL,QACvBuB,EAAeD,EAAOG,OAEX,C,sBACfN,IACAO,I,iCAKIF,EAAQF,EAAOK,KAAKC,MAAMD,KAAKE,UAAYN,EAAe,KAEhEO,EAAUN,EAAMO,gBAChBC,EAAaR,EAAMS,eACnBC,EAAgBV,EAAMW,cACtBC,EAASZ,EAAMa,aAAcb,EAAMc,YACnCC,EAAef,EAAMgB,Y,UAEfC,EAAUjB,G,QAEhBkB,EAAUlB,EAAMmB,U,4DArBKtE,G,gCAAT,GAwBR8C,EAAqB,W,OACzBR,EAAiBpB,UAAUqD,IAAI,mC,EAE3BlB,EAAoB,W,OACxBd,EAAgBrB,UAAUsD,OAAO,mC,EAE7BxB,EAAmB,W,OACvBR,EAAetB,UAAUsD,OAAO,mC,EAE5BzB,EAAY,WAChBN,EAAQvB,UAAUsD,OAAO,0B,EAGrBX,EAAkB,SAAAY,GACtB,IAAMC,EAAc7D,SAASC,cAAc,gCAErC6D,EADe,IAAIC,KAAKH,GACKI,qBAAqBC,QAAO,MAAQ,KAEvEJ,EAAYK,UAAYJ,C,EAGpBZ,EAAW,SAACiB,EAAaC,GAC7B,IAAMC,EAAgBrE,SAASC,cAAc,0BACvCqE,EAActE,SAASC,cAAc,wBAE3CoE,EAAcH,UAAYC,EAC1BG,EAAYJ,UAAYE,C,EAGpBf,EAAiB,SAAAO,GACF5D,SAASC,cAAc,8BAE/BiE,UAAYN,EAAMW,QAAQ,E,EAGjChB,EAAS,W,MAAGxE,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,EAAMoD,G,IAChBkC,EAEAC,EAEAC,EAMAC,E,yEAVAH,EAAUxE,SAASC,cAAc,yB,SAElB4B,EAAc+C,a,OAA7BH,EAAMpF,EAAAC,KAENoF,EAAqBD,EACvBnC,EAAMuC,UAAUC,KAAI,SAAAC,G,OAClBN,EAAOtD,KAAKsD,OAAOO,MAAK,SAAAC,G,OAASA,EAAMF,KAAOA,C,OAEhD,GAEEJ,EAAeD,EAAmBI,KAAI,SAAAG,G,OAASA,EAAMC,I,IAAMC,KAAK,MAEtEX,EAAQN,UAAYS,GAAgB,I,2DAbdrC,G,gCAAT,GAgBTkB,EAAY,SAAAI,GACF5D,SAASC,cAAc,yBAE/BiE,UAAYN,C,EAGdhB,EAAY,SAAAgB,GACF5D,SAASC,cAAc,yBAE/BiE,UAAYN,C,EAGdd,EAAY,W,MAAG/D,EAAAL,EAAA,CAAAK,EAAAC,GAAAC,MAAA,SAAAC,EAAMkG,G,kEACbpF,SAASC,cAAc,4BAE/BoF,IAAM,sCAAmDC,OAAbF,G,2DAHvBA,G,gCAAT,GAMlBtD,I","sources":["src/js/test.js","src/js/menu.js","src/js/weekly-trends.js","src/js/upcoming.js"],"sourcesContent":["\n\n// Приклад роботи з бекендом\nimport { RequestServer } from \"./requestServer\";\n\nconst requestServer = new RequestServer();\n\nasync function test() {\n    try {\n        const response = await requestServer.trendingDay();\n        console.log(response);\n    \n    } catch (error) {\n        console.error(error);\n    }\n}\n\ntest();\n","\n(() => {\n  const menu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n\n  function toggleMenu() {\n    menu.classList.toggle('visually-hidden');\n  }\n  \n})();\n\n// ---------------------------------\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\n//   document.getElementById(\"header-menu\").addEventListener(\"click\", function() {\n//     document.querySelector(\"header-menu\").classList.toggle(\"open\")\n//   })\n// })","import { RequestServer } from './requestServer';\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres';\n\nconst refs = {\n  weeklyCard: document.querySelector('.card'),\n};\nconst requestServer = new RequestServer();\n\nasync function weeklyTrend() {\n  try {\n    const genres = await requestGenre();\n    const responseWeek = await requestServer.trendingWeek();\n    const { results } = responseWeek.data;\n    const markupCard = markup(results.slice(0, 3));\n\n    refs.weeklyCard.innerHTML = markupCard;\n  } catch (error) {\n    console.log(error);\n  }\n}\nweeklyTrend();\n","import { RequestServer } from './requestServer';\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\n\nconst requestServer = new RequestServer();\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n\n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n"],"names":["$bpxeT","parcelRequire","$64ed97a34fea905c$var$requestServer","RequestServer","$64ed97a34fea905c$var$_test","$parcel$interopDefault","$2TvXO","mark","_callee","response","trendingDay","_ctx","sent","console","log","error","t0","apply","this","arguments","$64ed97a34fea905c$var$test","menu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","classList","toggle","addEventListener","$fe3a3a1ac89f0559$var$refs","weeklyCard","$fe3a3a1ac89f0559$var$requestServer","$cFGTe","$fe3a3a1ac89f0559$var$_weeklyTrend","responseWeek","results","markupCard","$3qwTJ","requestGenre","trendingWeek","data","$1KhuP","markup","slice","innerHTML","$fe3a3a1ac89f0559$var$weeklyTrend","$4c6aab06649ec8ef$var$loadingMessageEl","$4c6aab06649ec8ef$var$noDataMessageEl","$4c6aab06649ec8ef$var$errorMessageEl","$4c6aab06649ec8ef$var$movieEl","$4c6aab06649ec8ef$var$requestServer","$4c6aab06649ec8ef$var$fetchUpcoming","newFilms","$4c6aab06649ec8ef$var$fillData","$4c6aab06649ec8ef$var$hideLoadingMessage","$4c6aab06649ec8ef$var$showMovie","$4c6aab06649ec8ef$var$showErrorMessage","movies","moviesLength","movie","length","$4c6aab06649ec8ef$var$showNoDataMessage","Math","round","random","$4c6aab06649ec8ef$var$fillTitle","original_title","$4c6aab06649ec8ef$var$fillBackdrop","backdrop_path","$4c6aab06649ec8ef$var$fillReleaseDate","release_date","$4c6aab06649ec8ef$var$fillVote","vote_average","vote_count","$4c6aab06649ec8ef$var$fillPopularity","popularity","$4c6aab06649ec8ef$var$fillGenre","$4c6aab06649ec8ef$var$fillAbout","overview","add","remove","value","releaseDate","formattedDate","Date","toLocaleDateString","replace","innerText","voteAverage","voteCount","voteAverageEl","voteCountEl","toFixed","genreEl","genres","currentMovieGenres","genresString","movieGenre","genre_ids","map","id","find","genre","name","join","backdropPath","src","concat"],"version":3,"file":"index.93a4ae46.js.map"}