{"mappings":"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","sources":["src/index.js","src/js/menu.js","src/js/weekly-trends.js","src/js/upcoming.js"],"sourcesContent":["// Зразок імпорту\nimport './js/modal';\nimport './js/toggel';\nimport './js/menu';\nimport './js/hero';\nimport './js/weekly-trends';\nimport './js/upcoming';\nimport './js/localModalJs';\nimport './js/footerModal';\nimport './js/scrollUp';\n\n","\n(() => {\n  const menu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n\n  function toggleMenu() {\n    menu.classList.toggle('visually-hidden');\n  }\n  \n})();\n\n// ---------------------------------\n\n// document.addEventListener(\"DOMContentLoaded\", function() {\n//   document.getElementById(\"header-menu\").addEventListener(\"click\", function() {\n//     document.querySelector(\"header-menu\").classList.toggle(\"open\")\n//   })\n// })","import { RequestServer } from './requestServer';\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres';\n\nconst refs = {\n  weeklyCard: document.querySelector('.card'),\n};\nconst requestServer = new RequestServer();\n\nasync function weeklyTrend() {\n  try {\n    const genres = await requestGenre();\n    const responseWeek = await requestServer.trendingWeek();\n    const { results } = responseWeek.data;\n    const markupCard = markup(results.slice(0, 3));\n\n    refs.weeklyCard.innerHTML = markupCard;\n\n    const weeklyTitle = document.querySelector('.weekly-tr__title');\n    let LightSwitcher = document.querySelector('.switcher');\n    let isLight = localStorage.getItem('isLight');\n    if (isLight === 'true') {\n      weeklyTitle.classList.add('weekly-tr__title-light');\n    }\n    LightSwitcher.addEventListener('click', () => {\n      weeklyTitle.classList.toggle('weekly-tr__title-light');\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nweeklyTrend();\n","import { RequestServer } from './requestServer';\nimport { KEY_MOVIE_LIST } from \"./localStorage\";\nimport { getMovieList } from \"./localStorage\";\nimport { saveMovieList } from \"./localStorage\";\nimport { loadMoveList } from \"./localStorage\";\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\nconst btn = document.querySelector('#upcoming-remind-btn');\n\nconst requestServer = new RequestServer();\nlet currenyMovie;\nlet filmIndex;\nconst stateButtonUpc = {\n    addText: 'Remind me',\n    removeText: 'Delete from my library',\n    localMarkup: '',\n    currentStateButton: true\n}\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n \n\n\n  console.log(movie.id);\n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n\n const { poster_path,\n    original_title = '',\n    overview = '',\n    release_date = '',\n    vote_average = '',\n    id } = movie;\n\n  checkMovieLocalStorage(id);\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n  const genreText = genreEl.innerText;\n  const genreTwo = genreText.split(',').slice(0, 2);\n   let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n      let rating = vote_average.toFixed(1);\n stateButtonUpc.localMarkup = {\n        id: id,\n        str: `<img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${genreTwo} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>`\n    };\n  console.log(stateButtonUpc.localMarkup);\n\n  \n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n\nconsole.log(currenyMovie);\n\n\n\n\nfunction checkMovieLocalStorage(idFilm) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    // console.log(currentState);\n    if (!currentState) {\n        // const filmIndex = currentState.findIndex(obj => obj.id === Number(id));\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText);\n        return;\n    }\n    // const [idLocalArray] = Object.keys(currentState);\n     filmIndex = currentState.findIndex(obj => obj.id === idFilm);\n   \n    // console.log(filmIndex);\n        if (filmIndex !== -1) {\n        btn.textContent = stateButtonUpc.removeText;\n        stateButtonUpc.currentStateButton = false;\n       \n        // console.log(stateButton.removeText);\n        } else {\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText); \n  }\n}\nif (btn) {\n  btn.addEventListener('click', onLoadLocalStorage);\n}\n     \nfunction onLoadLocalStorage(event) {\n   \n    console.log(stateButtonUpc.currentStateButton);\n    if (stateButtonUpc.currentStateButton) {\n        loadMoveList(stateButtonUpc.localMarkup);\n        stateButtonUpc.currentStateButton = false;\n        btn.textContent = stateButtonUpc.removeText;\n        console.log('add');\n    } else {\n        deleteLocalFilm(filmIndex);\n        stateButtonUpc.currentStateButton = true;\n        btn.textContent = stateButtonUpc.addText;\n        console.log('remove');\n        // checkLocalStorage(KEY_MOVIE_LIST);\n    }\n}\n\n\nfunction deleteLocalFilm(index) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    if (currentState.length === 1) {\n        localStorage.removeItem(KEY_MOVIE_LIST);\n        return;\n    }\n  currentState.splice(index, 1);\n  saveMovieList(KEY_MOVIE_LIST, currentState);\n  // checkLocalStorage();\n} "],"names":["parcelRequire","menu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","classList","toggle","addEventListener","$hY6V0","$d395fb91404b7f70$var$refs","weeklyCard","$d395fb91404b7f70$var$requestServer","RequestServer","async","$7o4ng","requestGenre","responseWeek","trendingWeek","results","data","markupCard","$3huUq","markup","slice","innerHTML","weeklyTitle","LightSwitcher","localStorage","getItem","add","error","console","log","$d395fb91404b7f70$var$weeklyTrend","$65414923e0a79c46$var$loadingMessageEl","$65414923e0a79c46$var$noDataMessageEl","$65414923e0a79c46$var$errorMessageEl","$65414923e0a79c46$var$movieEl","$65414923e0a79c46$var$btn","$65414923e0a79c46$var$requestServer","$65414923e0a79c46$var$filmIndex","$65414923e0a79c46$var$stateButtonUpc","addText","removeText","localMarkup","currentStateButton","$65414923e0a79c46$var$fillData","response","movies","moviesLength","length","$65414923e0a79c46$var$hideLoadingMessage","$65414923e0a79c46$var$showNoDataMessage","movie","Math","round","random","id","$65414923e0a79c46$var$fillTitle","original_title","$65414923e0a79c46$var$fillBackdrop","backdrop_path","$65414923e0a79c46$var$fillReleaseDate","release_date","$65414923e0a79c46$var$fillVote","vote_average","vote_count","$65414923e0a79c46$var$fillPopularity","popularity","$65414923e0a79c46$var$fillGenre","$65414923e0a79c46$var$fillAbout","overview","poster_path","idFilm","currentState","$31u3U","getMovieList","KEY_MOVIE_LIST","textContent","findIndex","obj","$65414923e0a79c46$var$checkMovieLocalStorage","genreTwo","innerText","split","releaseDate","substring","path","rating","toFixed","str","remove","$65414923e0a79c46$var$showErrorMessage","$65414923e0a79c46$var$showMovie","value","formattedDate","Date","toLocaleDateString","replace","voteAverage","voteCount","voteAverageEl","voteCountEl","genreEl","genres","movieGenre","genresString","genre_ids","map","find","genre","name","join","backdropPath","src","newFilms","$65414923e0a79c46$var$fetchUpcoming","$65414923e0a79c46$var$currenyMovie","event","loadMoveList","index","removeItem","splice","saveMovieList","$65414923e0a79c46$var$deleteLocalFilm"],"version":3,"file":"index.a61cba82.js.map"}