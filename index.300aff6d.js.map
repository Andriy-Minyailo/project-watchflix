{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/hero.js","src/js/markupHero.js","node_modules/@parcel/runtime-js/lib/runtime-ef4039c48cfcc780.js","src/js/modalTrailer.js","src/js/weekly-trends.js","src/js/markup.js","src/js/nameGenres.js","src/js/upcoming.js","node_modules/@parcel/runtime-js/lib/runtime-8ad4549be00fe787.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import { RequestServer } from './requestServer';\nimport { markupHero } from './markupHero';\nimport { applyWatchTraileListener } from './modalTrailer';\n\nconst ref = {\n  hero: document.getElementById('hero'),\n};\n\nconst requestServer = new RequestServer();\n\nasync function ontrendingDay() {\n  try {\n    const responseDay = await requestServer.trendingDay();\n    const { results } = responseDay.data;\n\n    const filmOfDay = results;\n    const markupBackgr = markupHero(filmOfDay);\n\n    ref.hero.innerHTML = markupBackgr;\n    applyWatchTraileListener();\n\n    const toggleThemeBtn = document.getElementById('toggel-btn');\n    const discription = document.querySelector('.hero__discription');\n    const heroTitle = document.querySelector('.hero__title');\n    const heroText = document.querySelector('.hero__text');\n\n    toggleThemeBtn.addEventListener('click', () => {\n      discription.classList.toggle('hero__discription-light');\n      heroTitle.classList.toggle('hero__title-light');\n      heroText.classList.toggle('hero__text-light');\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nontrendingDay();\n","import desktop from '../img/upgrade/desktop.jpg';\n\nexport function markupHero(results) {\n  let result = results[Math.round(Math.random() * (results.length - 1))];\n  let path = '';\n  \n  if (!result) {\n    result = { original_title: 'Letâ€™s Make Your Own Cinema',\n      overview: `Is a guide to creating a personalized movie theater experience. \n        You'll need a projector, screen, and speakers. Decorate your space, choose your \n        films, and stock up on snacks for the full experience.`,\n      vote_average: '',\n      id: ''\n    };\n    path = desktop;\n  }\n\n  const { backdrop_path,\n\n    original_title = '',\n    overview = '',\n    vote_average = '',\n    id } = result;\n  \n  path = `https://image.tmdb.org/t/p/original${backdrop_path}`;      \n  \n        return `<div class=\"hero__discription\">\n\n            <h2 class=\"hero__title\">${original_title}</h2>\n            <p class=\"hero__rating\">${vote_average}</p>\n            <p class=\"hero__text\">${overview}</p>\n            <button id=\"watch-trailter__btn\" class=\"hero__btn watch-trailer-dark-theme\" data-id=\"${id}\" type=\"button\">Watch trailer</button>\n            <div id=\"swiper\" class=\"tui-pagination\"></div>\n            </div>\n            <div class=\"hero__backgr\" id=\"${id}\">\n            <img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"hero__img\" />\n            </div>`;\n}\n\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9t7bk\")).toString();","import { RequestServer } from './requestServer';\nimport { modalListener } from './modals-open-close';\n\nconst ref = {\n  modal: document.querySelector(`[data-modal=\"modal-2\"]`),\n};\nconst requestServer = new RequestServer();\n\nasync function handleTrailerClick(e) {\n  try {\n    const movieId = e.currentTarget.getAttribute('data-id');\n    const response = await requestServer.movieTrailer(movieId);\n    const { results } = response.data;\n    const trailer = results[0];\n\n    if (trailer) {\n      const noTrailerWrapper =\n        document.getElementsByClassName('modal-no-trailer')[0];\n      const trailerWrapper =\n        document.getElementsByClassName('modal-trailer')[0];\n\n      let html = `<iframe id=\"trailer-video-player\" width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/${trailer.key}\" title=\"${trailer.name}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>`;\n      trailerWrapper.innerHTML = html;\n\n      noTrailerWrapper.classList.add('is-hidden');\n      trailerWrapper.classList.remove('is-hidden');\n    }\n  } catch (error) {\n    console.log(error);\n  } finally {\n    modalListener('modal-2', onModalTrailerClose);\n  }\n}\n\nfunction onModalTrailerClose() {\n  const trailerWrapper = document.getElementsByClassName('modal-trailer')[0];\n  const noTrailerWrapper =\n    document.getElementsByClassName('modal-no-trailer')[0];\n  trailerWrapper.innerHTML = '';\n  noTrailerWrapper?.classList.remove('is-hidden');\n  trailerWrapper?.classList.add('is-hidden');\n}\n\nexport function applyWatchTraileListener() {\n  const button = document.getElementById('watch-trailter__btn');\n  button.addEventListener('click', handleTrailerClick);\n}\n","import { RequestServer } from './requestServer';\nimport { markup } from './markup';\nimport { requestGenre } from './nameGenres';\n\nconst refs = {\n  weeklyCard: document.querySelector('.card'),\n};\nconst requestServer = new RequestServer();\n\nasync function weeklyTrend() {\n  try {\n    const genres = await requestGenre();\n    const responseWeek = await requestServer.trendingWeek();\n    const { results } = responseWeek.data;\n    const markupCard = markup(results.slice(0, 3));\n\n    refs.weeklyCard.innerHTML = markupCard;\n  } catch (error) {\n    console.log(error);\n  }\n}\nweeklyTrend();\n","import { nameGenres } from './nameGenres';\n\nexport function markup(results) {\n \n  const markupCard = results.map(\n      ({\n        poster_path,\n        original_title = '',\n        genre_ids,\n        overview = '',\n        release_date = '',\n        vote_average = '',\n        id\n      }) => {\n        let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n      let rating = vote_average.toFixed(1);\n        return `<li class=\"card__item list\" id=\"${id}\">\n            <img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${nameGenres(genre_ids).join(', ')} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>\n            </li>`;\n      }\n    )\n    .join('');\n\n  return markupCard;\n}        ","import { RequestServer } from \"./requestServer\";\nconst requestServer = new RequestServer();\nlet genresList;\n\nexport async function requestGenre() {\n      try {\n        const responsGenre = await requestServer.movieGenre();\n        const { genres } = responsGenre.data;\n        genresList = genres.reduce((acc, { id, name }) => {\n    acc[id] = name;\n    return acc;\n  }, {});\n    } catch(error) {\n    console.log(error);\n  };\n}\n// requestGenre();\n\nexport function nameGenres(arrayId) {\n     const result = arrayId.map(id => genresList[id]);\n        if (result.length > 2) {\n    result.splice(2);\n    } else if (result.length === 0) {\n    result.push(\"no genres\")\n    }\n    // console.log(result);\n  return result\n\n}\n\n","import { RequestServer } from './requestServer';\nimport { KEY_MOVIE_LIST } from \"./localStorage\";\nimport { getMovieList } from \"./localStorage\";\nimport { saveMovieList } from \"./localStorage\";\nimport { loadMoveList } from \"./localStorage\";\n\nconst loadingMessageEl = document.querySelector('#upcoming-loading-message');\nconst noDataMessageEl = document.querySelector('#upcoming-no-data-message');\nconst errorMessageEl = document.querySelector('#upcoming-error-message');\nconst movieEl = document.querySelector('#upcoming-movie');\nconst btn = document.querySelector('#upcoming-remind-btn');\n\nconst requestServer = new RequestServer();\nlet currenyMovie;\nlet filmIndex;\nconst stateButtonUpc = {\n    addText: 'Remind me',\n    removeText: 'Delete from my library',\n    localMarkup: '',\n    currentStateButton: true\n}\n\nconst fetchUpcoming = async () => {\n  try {\n    const response = await requestServer.newFilms();\n\n    await fillData(response);\n\n    hideLoadingMessage();\n    showMovie();\n  } catch (error) {\n    console.error(error);\n\n    hideLoadingMessage();\n    showErrorMessage();\n  }\n};\n\nconst fillData = async response => {\n  const movies = response.data.results;\n  const moviesLength = movies.length;\n\n  if (!moviesLength) {\n    hideLoadingMessage();\n    showNoDataMessage();\n\n    return;\n  }\n\n  const movie = movies[Math.round(Math.random() * (moviesLength - 1))];\n \n\n\n  console.log(movie.id);\n  fillTitle(movie.original_title);\n  fillBackdrop(movie.backdrop_path);\n  fillReleaseDate(movie.release_date);\n  fillVote(movie.vote_average, movie.vote_count);\n  fillPopularity(movie.popularity);\n\n  await fillGenre(movie);\n\n  fillAbout(movie.overview);\n\n const { poster_path,\n    original_title = '',\n    overview = '',\n    release_date = '',\n    vote_average = '',\n    id } = movie;\n\n  checkMovieLocalStorage(id);\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n  const genreText = genreEl.innerText;\n  const genreTwo = genreText.split(',').slice(0, 2);\n   let releaseDate;\n        if (!release_date) {\n          releaseDate = 'no date';\n        } else {\n          releaseDate = release_date.substring(0, 4);\n        }\n        let path = `https://image.tmdb.org/t/p/w500${poster_path}`;\n        if (!poster_path) {\n          path = 'https://picsum.photos/500/750';\n        }\n      let rating = vote_average.toFixed(1);\n stateButtonUpc.localMarkup = {\n        id: id,\n        str: `<img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <div class=\"container-info\">\n            <h2 class=\"card__title\">${original_title}</h2>\n            <p class=\"card__desc\">${genreTwo} | ${releaseDate}</p>\n            <p class=\"card__rating\">${rating}</p>\n            </div>`\n    };\n  console.log(stateButtonUpc.localMarkup);\n\n  \n};\n\nconst hideLoadingMessage = () =>\n  loadingMessageEl.classList.add('upcoming__status-message--hidden');\n\nconst showNoDataMessage = () =>\n  noDataMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showErrorMessage = () =>\n  errorMessageEl.classList.remove('upcoming__status-message--hidden');\n\nconst showMovie = () => {\n  movieEl.classList.remove('upcoming__movie--hidden');\n};\n\nconst fillReleaseDate = value => {\n  const releaseDate = document.querySelector('#upcoming-movie-release-date');\n  const originalDate = new Date(value);\n  const formattedDate = originalDate.toLocaleDateString().replace(/\\//g, '.');\n\n  releaseDate.innerText = formattedDate;\n};\n\nconst fillVote = (voteAverage, voteCount) => {\n  const voteAverageEl = document.querySelector('#upcoming-vote-average');\n  const voteCountEl = document.querySelector('#upcoming-vote-count');\n\n  voteAverageEl.innerText = voteAverage;\n  voteCountEl.innerText = voteCount;\n};\n\nconst fillPopularity = value => {\n  const popularity = document.querySelector('#upcoming-movie-popularity');\n\n  popularity.innerText = value.toFixed(1);\n};\n\nconst fillGenre = async movie => {\n  const genreEl = document.querySelector('#upcoming-movie-genre');\n\n  const genres = await requestServer.movieGenre();\n\n  const currentMovieGenres = genres\n    ? movie.genre_ids.map(id =>\n        genres.data.genres.find(genre => genre.id === id)\n      )\n    : [];\n\n  const genresString = currentMovieGenres.map(genre => genre.name).join(', ');\n\n  genreEl.innerText = genresString || '-';\n};\n\nconst fillAbout = value => {\n  const about = document.querySelector('#upcoming-movie-about');\n\n  about.innerText = value;\n};\n\nconst fillTitle = value => {\n  const title = document.querySelector('#upcoming-movie-title');\n\n  title.innerText = value;\n};\n\nconst fillBackdrop = async backdropPath => {\n  const img = document.querySelector('#upcoming-movie-backdrop');\n\n  img.src = `https://image.tmdb.org/t/p/original${backdropPath}`;\n};\n\nfetchUpcoming();\n\nconsole.log(currenyMovie);\n\n\n\n\nfunction checkMovieLocalStorage(idFilm) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    // console.log(currentState);\n    if (!currentState) {\n        // const filmIndex = currentState.findIndex(obj => obj.id === Number(id));\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText);\n        return;\n    }\n    // const [idLocalArray] = Object.keys(currentState);\n     filmIndex = currentState.findIndex(obj => obj.id === idFilm);\n   \n    // console.log(filmIndex);\n        if (filmIndex !== -1) {\n        btn.textContent = stateButtonUpc.removeText;\n        stateButtonUpc.currentStateButton = false;\n       \n        // console.log(stateButton.removeText);\n        } else {\n        btn.textContent = stateButtonUpc.addText;\n        stateButtonUpc.currentStateButton = true;\n        // console.log(filmIndex);\n        // console.log(stateButton.addText); \n  }\n}\nbtn.addEventListener('click', onLoadLocalStorage);\n     \nfunction onLoadLocalStorage(event) {\n   \n    console.log(stateButtonUpc.currentStateButton);\n    if (stateButtonUpc.currentStateButton) {\n        loadMoveList(stateButtonUpc.localMarkup);\n        stateButtonUpc.currentStateButton = false;\n        btn.textContent = stateButtonUpc.removeText;\n        console.log('add');\n    } else {\n        deleteLocalFilm(filmIndex);\n        stateButtonUpc.currentStateButton = true;\n        btn.textContent = stateButtonUpc.addText;\n        console.log('remove');\n        // checkLocalStorage(KEY_MOVIE_LIST);\n    }\n}\n\n\nfunction deleteLocalFilm(index) {\n    const currentState = getMovieList(KEY_MOVIE_LIST);\n    if (currentState.length === 1) {\n        localStorage.removeItem(KEY_MOVIE_LIST);\n        return;\n    }\n  currentState.splice(index, 1);\n  saveMovieList(KEY_MOVIE_LIST, currentState);\n  // checkLocalStorage();\n} ","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"co8kk\\\":\\\"index.300aff6d.js\\\",\\\"9t7bk\\\":\\\"desktop.a15d7519.jpg\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$hY6V0","parcelRequire","$aab6d1c60b3e9a0a$var$ref","hero","document","getElementById","$aab6d1c60b3e9a0a$var$requestServer","RequestServer","async","responseDay","trendingDay","results","data","filmOfDay","markupBackgr","$eK0aa","markupHero","innerHTML","$OcCik","applyWatchTraileListener","toggleThemeBtn","discription","querySelector","heroTitle","heroText","addEventListener","classList","toggle","error","console","log","$aab6d1c60b3e9a0a$var$ontrendingDay","$i4WMq","$abb57cf18fb101b4$export$66403316bf9d94e9","result","Math","round","random","path","original_title","overview","vote_average","$parcel$interopDefault","backdrop_path","module","exports","URL","resolve","import","meta","url","toString","$096e75081bc23d6e$var$requestServer","$096e75081bc23d6e$var$handleTrailerClick","e","movieId","currentTarget","getAttribute","response","movieTrailer","trailer","noTrailerWrapper","getElementsByClassName","trailerWrapper","html","key","name","add","remove","$6pZM0","modalListener","$096e75081bc23d6e$var$onModalTrailerClose","$096e75081bc23d6e$export$3f3e4bf216f4b41","$d395fb91404b7f70$var$refs","weeklyCard","$d395fb91404b7f70$var$requestServer","$7o4ng","requestGenre","responseWeek","trendingWeek","markupCard","$3huUq","markup","slice","$d395fb91404b7f70$var$weeklyTrend","$263aef85a4d00bfb$export$7b40ce885114f0a6","map","poster_path","genre_ids","release_date","releaseDate","substring","rating","toFixed","nameGenres","join","$560e2aeea8f3a81d$var$requestServer","$560e2aeea8f3a81d$var$genresList","$560e2aeea8f3a81d$export$77e97b00fc29ddbb","responsGenre","movieGenre","genres","reduce","acc","$560e2aeea8f3a81d$export$8d9bc7c52d01b11","arrayId","splice","push","$65414923e0a79c46$var$loadingMessageEl","$65414923e0a79c46$var$noDataMessageEl","$65414923e0a79c46$var$errorMessageEl","$65414923e0a79c46$var$movieEl","$65414923e0a79c46$var$btn","$65414923e0a79c46$var$requestServer","$65414923e0a79c46$var$filmIndex","$65414923e0a79c46$var$stateButtonUpc","addText","removeText","localMarkup","currentStateButton","$65414923e0a79c46$var$fillData","movies","moviesLength","$65414923e0a79c46$var$hideLoadingMessage","$65414923e0a79c46$var$showNoDataMessage","movie","$65414923e0a79c46$var$fillTitle","$65414923e0a79c46$var$fillBackdrop","$65414923e0a79c46$var$fillReleaseDate","$65414923e0a79c46$var$fillVote","vote_count","$65414923e0a79c46$var$fillPopularity","popularity","$65414923e0a79c46$var$fillGenre","$65414923e0a79c46$var$fillAbout","idFilm","currentState","$31u3U","getMovieList","KEY_MOVIE_LIST","textContent","findIndex","obj","$65414923e0a79c46$var$checkMovieLocalStorage","genreTwo","innerText","split","str","$65414923e0a79c46$var$showErrorMessage","$65414923e0a79c46$var$showMovie","value","formattedDate","Date","toLocaleDateString","replace","voteAverage","voteCount","voteAverageEl","voteCountEl","genreEl","genresString","find","genre","backdropPath","src","newFilms","$65414923e0a79c46$var$fetchUpcoming","$65414923e0a79c46$var$currenyMovie","event","loadMoveList","index","localStorage","removeItem","saveMovieList","$65414923e0a79c46$var$deleteLocalFilm","register","JSON","parse"],"version":3,"file":"index.300aff6d.js.map"}